name: Build with Evidence

on:
  workflow_dispatch
  # [push, workflow_dispatch]

permissions:
  id-token: write
  contents: read

jobs:
  Docker-Build-With-Evidence:
    runs-on: ubuntu-latest
    steps:
      - name: Install jfrog cli
        uses: jfrog/setup-jfrog-cli@v4
        id: cli
        env:
          JF_URL: ${{ vars.JF_URL }}
          JF_PROJECT: ${{ vars.PROJECT_NAME }}
        with:
          oidc-provider-name: github-oidc-integration
          oidc-audience: jfrog-github
          disable-auto-build-publish: true

      - uses: actions/checkout@v4

      - name: Log in to Artifactory Docker Registry
        id: docker-login
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.ARTIFACTORY_URL }}
          username: ${{ steps.cli.outputs.oidc-user }}
          password: ${{ steps.cli.outputs.oidc-token }}

      - name: Set up QEMU
        id: setup-qemu
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: setup-buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          install: true

      - name: Setup Signing Key
        id: setup-signing-key
        run: |
          echo "${{ secrets.PRIVATE_KEY_EXPORT }}" > "${{ secrets.PRIVATE_KEY_NAME }}"
          chmod 600 ${{ secrets.PRIVATE_KEY_NAME }}
          openssl rsa -in private.pem -check

      - name: Build Docker image
        id: build-docker-image
        run: |
          URL=$(echo ${{ vars.ARTIFACTORY_URL }} | sed 's|^https://||')
          REPO_URL=${URL}'/${{ vars.DOCKER_VIRTUAL}}'
          echo ${URL}
          echo ${REPO_URL}
          docker build \
          --build-arg REPO_URL=${REPO_URL} -f Dockerfile . \
          --tag ${REPO_URL}/example-project-image:${{ github.run_number }} \
          --output=type=image \
          --platform linux/amd64 \
          --metadata-file=build-metadata \
          --push
          jf rt build-docker-create ${{ vars.DOCKER_VIRTUAL}} --image-file build-metadata --build-name ${{ vars.BUILD_NAME }} --build-number ${{ github.run_number }}

      - name: Evidence on docker
        id: evidence-on-docker
        run: |
          echo '{ "actor": "${{ github.actor }}", "date": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'" }' > sign.json
          jf evd create \
          --package-name example-project-image \
          --package-version ${{ github.run_number }} \
          --package-repo-name ${{ vars.DOCKER_VIRTUAL}} \
          --key "${{ secrets.PRIVATE_KEY_NAME }}" \
          --predicate ./sign.json \
          --predicate-type https://jfrog.com/evidence/signature/v1 
          echo '🔎 Evidence attached: `signature` 🔏 ' 

      - name: Upload readme file
        id: upload-readme
        run: |
          jf rt upload ./README.md example-project-generic-dev/readme/${{ github.run_number }}/ --build-name ${{ vars.BUILD_NAME }} --build-number ${{ github.run_number }}
          jf evd create --subject-repo-path example-project-generic-dev/readme/${{ github.run_number }}/README.md \
            --key "${{ secrets.PRIVATE_KEY_NAME }}" \
            --predicate ./sign.json --predicate-type https://jfrog.com/evidence/signature/v1

      - name: Publish build info
        id: publish-build-info
        run: jfrog rt build-publish ${{ vars.BUILD_NAME }} ${{ github.run_number }}

      - name: Sign build evidence
        id: sign-build-evidence
        run: |
          echo '{ "actor": "${{ github.actor }}", "date": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'" }' > sign.json
          jf evd create \
          --build-name ${{ vars.BUILD_NAME }} \
          --build-number ${{ github.run_number }} \
          --predicate ./sign.json \
          --predicate-type https://jfrog.com/evidence/build-signature/v1 \
          --key "${{ secrets.PRIVATE_KEY_NAME }}"
          echo '🔎 Evidence attached: `build-signature` 🔏 ' >> $GITHUB_STEP_SUMMARY

      - name: Create release bundle
        id: create-release-bundle
        run: |
          echo '{ "files": [ {"build": "'"${{ vars.BUILD_NAME }}/${{ github.run_number }}"'" } ] }' > bundle-spec.json
          jf release-bundle-create ${{ vars.BUNDLE_NAME }} ${{ github.run_number }} \
          --signing-key PGP-RSA-2048 \
          --spec bundle-spec.json \
          --sync=true
          NAME_LINK=${{ vars.ARTIFACTORY_URL }}'/ui/artifactory/lifecycle/?bundleName='${{ vars.BUNDLE_NAME }}'&bundleToFlash='${{ vars.BUNDLE_NAME }}'&repositoryKey=example-project-release-bundles-v2&activeKanbanTab=promotion'
          VER_LINK=${{ vars.ARTIFACTORY_URL }}'/ui/artifactory/lifecycle/?bundleName='${{ vars.BUNDLE_NAME }}'&bundleToFlash='${{ vars.BUNDLE_NAME }}'&releaseBundleVersion='${{ github.run_number }}'&repositoryKey=example-project-release-bundles-v2&activeVersionTab=Version%20Timeline&activeKanbanTab=promotion'
          echo '📦 Release bundle ['${{ vars.BUNDLE_NAME }}']('${NAME_LINK}'):['${{ github.run_number }}']('${VER_LINK}') created' >> $GITHUB_STEP_SUMMARY

      - name: Evidence on release-bundle v2
        id: create-release-bundle-evidence
        run: |
          echo '{ "actor": "${{ github.actor }}", "date": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'" }' > rbv2_evidence.json
          JF_LINK=${{ vars.ARTIFACTORY_URL }}'/ui/artifactory/lifecycle/?bundleName='${{ vars.BUNDLE_NAME }}'&bundleToFlash='${{ vars.BUNDLE_NAME }}'&releaseBundleVersion='${{ github.run_number }}'&repositoryKey=release-bundles-v2&activeVersionTab=Version%20Timeline&activeKanbanTab=promotion'
          echo 'Test on Release bundle ['${{ vars.BUNDLE_NAME }}':'${{ github.run_number }}']('${JF_LINK}') success' >> $GITHUB_STEP_SUMMARY
          jf evd create --release-bundle ${{ vars.BUNDLE_NAME }} --release-bundle-version ${{ github.run_number }} \
            --predicate ./rbv2_evidence.json --predicate-type https://jfrog.com/evidence/testing-results/v1 \
            --key "${{ secrets.PRIVATE_KEY_NAME }}"
          echo '🔎 Evidence attached: integration-test 🧪 ' >> $GITHUB_STEP_SUMMARY
